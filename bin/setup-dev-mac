#!/bin/bash
set -euo pipefail
trap "exit" INT

REPO_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )"/.. && pwd )"
source "$REPO_DIR/env/dev.env"
DATA_DIR="$REPO_DIR/data"

ln -s "$REPO_DIR" /opt/suitedconnectors.poker
mkdir -p "$DATA_DIR/logs"


function info {
    echo -e "\\n$(tput bold)$(tput setaf 4)" "$@" "$(tput sgr0)"
}
function success {
    echo -e "\\n$(tput bold)" "$@" "$(tput sgr0)"
}
function error {
    echo -e "\\n$(tput bold)$(tput setaf 1)" "$@" "$(tput sgr0)"
}

if ls "$DATA_DIR/database/base" > /dev/null 2>&1; then
    error "It looks like you have a database already initialized, please backup and move or delete your DATA_DIR:"
    echo "     $DATA_DIR"
    exit 1
fi

success " ðŸ”µ    Setup: Development Machine w/ supervisord (macOS >= 10.12.0)"
    if [[ "$(uname)" != 'Darwin' ]]; then
        error "Not on Mac!: $(uname)"
        exit 1
    fi
    ln -fs "$REPO_DIR" /opt/suitedconnectors.poker
echo "       Installing from $REPO_DIR..."


info "[1/8] Installing system dependencies..."
    brew update
    brew install python3 postgresql redis npm nginx libmaxminddb git wget fish supervisor
    brew services stop postgresql || true
    brew services stop redis || true
success "   âˆš   Homebrew dependencies are installed:"
success "           Python, postgresql, redis, npm, nginx, (and other utils)"


info "[2/8] Install Oddslingers utility commands..."
    echo "      Add the following to your \$PATH, then press enter once finished:"
    echo "           /opt/suitedconnectors/bin"
    bash -c "which suitedconnectors" | grep -q /opt/suitedconnectors.poker/bin || read
    if bash -c "which suitedconnectors" | grep -q /opt/suitedconnectors.poker/bin; then
        true
    else
        echo "/opt/bin/suitedconnectors.poker was not found in your \$PATH, please set it and run this script again"
        exit 1
    fi
success "   âˆš   'suitedconnectors' command now points to $(bash -c "which suitedconnectors") from your \$PATH"

info "[3/8] Seting up pip + virtualenv..."
    cd "$REPO_DIR/core"
    python3 --version | grep -q "Python 3.6" || exit 1
    pip3 install -q --upgrade pip setuptools virtualenv
    [ -d venv ] || virtualenv -p "$(which python3.6)" venv
    set +u
    source venv/bin/activate
    set -u
success "   âˆš   Virtualenv is active: $(which python) ($(python --version))"

info "[4/8] Installing python dependencies..."
    pip install -r requirements.txt
success "   âˆš   PyPI requirements are installed: requirements.txt"


info "[5/8] Generating certs and linking config files..."
    sudo bash -c "echo '127.0.0.1     suitedconnectors.l $DEFAULT_HOST' >> /etc/hosts"
    cd "$REPO_DIR/etc/nginx"
    openssl req -x509 -newkey rsa:4096 -keyout suitedconnectors.l.key -out suitedconnectors.l.crt -days 365 -nodes -subj "/C=IM/ST=Douglas/L=Douglas/O=OddSlingers/OU=Development/CN=suitedconnectors.l"
    # open suitedconnectors.l.crt

    rm -f /usr/local/etc/supervisor.ini
    rm -f /usr/local/etc/supervisord.conf
    ln -s "$REPO_DIR/etc/supervisor/mac-dev.conf" /usr/local/etc/supervisord.conf
success "   âˆš   Generated SSL certs and set suitedconnectors.l to 127.0.0.1"

info "[6/8] Initializing PostgreSQL database..."
    POSTGRES_PASSWORD=$(openssl rand -base64 14)

    initdb -D "$DATA_DIR/database"
    pg_ctl -D "$DATA_DIR/database" start

    psql -c "CREATE USER $POSTGRES_USER WITH PASSWORD '$POSTGRES_PASSWORD';" postgres
    psql -c "CREATE DATABASE $POSTGRES_DB OWNER $POSTGRES_USER;" postgres
    psql -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO $POSTGRES_USER;" postgres

    echo "POSTGRES_DB=$POSTGRES_DB" > "$REPO_DIR/env/secrets.env"
    echo "POSTGRES_USER=$POSTGRES_USER" >> "$REPO_DIR/env/secrets.env"
    echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> "$REPO_DIR/env/secrets.env"
success "   âˆš   Database setup complete:"
awk '{ print "    "$1 }' < "$REPO_DIR/env/secrets.env"


info "[7/8] Run initial migrations and create superuser..."
    brew services start redis
    cd "$REPO_DIR/core"
    set +u
    source venv/bin/activate
    set -u
    ./manage.py migrate
    ./manage.py createsuperuser
    brew services stop redis
    pg_ctl -D "$DATA_DIR/database" stop
success "   âˆš   Ran initial migrations and created admin user"

info "[8/8] Downloading geoip database..."
    "$REPO_DIR/bin/update-geoipdb"
success "   âˆš   GeoIP database updated: data/geoip"


success " âœ…    Done. See README.md for next steps."
    echo "       - Dev commands can be run using the 'suitedconnectors' command:"
    echo "           e.g. suitedconnectors start"
    echo "                suitedconnectors compjs tables.js"
    echo "                suitedconnectors resetdb"
    echo "       - Config is stored in env/secrets.env and env/dev.env"
    echo "       - Data is stored in suitedconnectors.poker/data/"

supervisord
sleep 5
supervisorctl status all
exit 0
