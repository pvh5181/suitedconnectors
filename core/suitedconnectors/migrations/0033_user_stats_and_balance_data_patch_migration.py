# Generated by Django 2.0.8 on 2018-11-01 19:05

from django.db import migrations
from django.db.models import Sum

from banker.utils import balance


def create_userstats(apps, schema_editor):
    """Method to create UserStats for existing users"""
    User = apps.get_model('suitedconnectors', 'User')
    UserStats = apps.get_model('suitedconnectors', 'UserStats')
    for user in User.objects.all():
        stats, _ = UserStats.objects.get_or_create(
            user=user
        )
        hands_played = user.player_set.aggregate(
            hands=Sum('n_hands_played')
        )['hands'] or 0
        stats.hands_played = hands_played
        stats.save()


def create_user_balance(apps, schema_editor):
    """Method to create UserBalance for existing users"""
    User = apps.get_model('suitedconnectors', 'User')
    UserBalance = apps.get_model('suitedconnectors', 'UserBalance')
    for user in User.objects.all().only('id'):
        userbalance, _ = UserBalance.objects.get_or_create(
            user=user
        )
        userbalance.balance = balance(user)
        userbalance.save()


class Migration(migrations.Migration):

    dependencies = [
        ('suitedconnectors', '0032_auto_20181018_1758'),
    ]

    operations = [
        migrations.RunPython(create_userstats),
        migrations.RunPython(create_user_balance)
    ]
